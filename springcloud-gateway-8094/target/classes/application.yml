server:
  port: 8094

spring:
  application:
    name: gateway
  redis:
    host: 127.0.0.1
    # redis端口（默认为6379）
    post: 6379
  profiles:
    # 指定配置
    # route_simple：简单尝试
    # route_stripPrefix：截取请求
    # route_uri：转发指定地址并传入参数
    # route_addRequestParameter：转发指定服务并传入参数
    # route_hystrix：熔断
    # route_requestRateLimiter：限流
    # route_all：综合
    active: route_all
    # 配置文件名称，用来标识不同环境的配置。由 spring.profiles.active 的值来决定使用哪组配置。
  cloud:
    gateway:
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 路由标识（id：标识，具有唯一性）   简单尝试
        - id: user
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: lb://eureka-provider
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            ## 转发地址格式为 uri/archive
            - Path=/user/**
              # 路由条件（predicates：断言，匹配 HTTP 请求内容）
            - Method=POST
          # 过滤器（filters：过滤器，过滤规则）
          filters:
          ## 添加指定参数
          #- AddRequestParameter=age, three
          ## 熔断
          - name: Hystrix
            args:
              name: fallbackcmd
              ### fallback 时调用的方法 http://localhost:8094/fallbackHystrix
              fallbackUri: forward:/fallbackHystrix
          ## 限流


hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8081/eureka/


